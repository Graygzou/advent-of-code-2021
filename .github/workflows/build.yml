name: Build and update chart

on:
  push:
    # Allow to ignore always
    branches-ignore:
      - '**'

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: src/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

  # Platform used to run msbuild command
  PLATFORM: x64

  REPOSITORY_NAME: TODO #advent-of-code-2020

jobs:

  # =========================================================================== #
  # ============ Build the entire solution to create all the .exe ============= #
  # =========================================================================== #

  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    # - name: Add MSBuild to PATH
    #   uses: microsoft/setup-msbuild@v1
    #
    # - name: Restore NuGet packages
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}
    #
    # - name: Build
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   # Add additional options to the MSBuild command line here (like platform or verbosity level).
    #   # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
    #   run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload builds
      uses: actions/upload-artifact@v2
      with:
        name: builds
        path: ${{env.SOLUTION_FILE_PATH}}${{env.PLATFORM}}/${{env.BUILD_CONFIGURATION}}

  # =========================================================================== #
  # =============== Start running all the days in separate jobs =============== #
  # =============== Uncommente each day as you complete them ================== #
  # =========================================================================== #

  # run-day-1:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day1-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: "${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt"
  #         exe-folder: "${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe"

  # run-day-2:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day2-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-3:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day3-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-4:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day4-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-5:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day5-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-6:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day6-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-7:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day7-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-8:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day8-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-9:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day9-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe


  # run-day-10:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day10-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-11:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day11-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-12:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day12-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-13:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day13-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-14:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day14-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-15:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day15-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-16:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day16-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-17:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day17-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-18:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day18-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-19:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day19-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
  #         extra-params: .${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/inputModified.txt

  # run-day-20:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day20-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-21:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day21-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-22:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day22-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-23:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day23-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-24:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day24-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  # run-day-25:
  #   runs-on: windows-latest
  #   needs: [build]
  #   env:
  #     DAY_NAME: Day25-
  #   outputs:
  #     total_time: ${{ steps.run-program.outputs.execution-time }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download a single artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: builds
  #         path: ${{env.BUILD_CONFIGURATION}}/
  #
  #     - name: Run program
  #       id: run-program
  #       uses: ./.github/actions/run-day-program
  #       with:
  #         input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
  #         exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  update-graphic:
    runs-on: ubuntu-latest
    needs: [
      run-day-1,
      run-day-2,
      run-day-3,
      run-day-4,
      run-day-5,
      run-day-6,
      run-day-7,
      run-day-8,
      run-day-9,
      run-day-10,
      run-day-11,
      run-day-12,
      run-day-13,
      run-day-14,
      run-day-15,
      run-day-16,
      run-day-17,
      run-day-18,
      run-day-19,
      run-day-20,
      run-day-21,
      run-day-22,
      run-day-23,
      run-day-24,
      run-day-25
    ]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Create graph url
        id: create-graph-url
        uses: ./.github/actions/create-graph-img
        with:
          name-array: '[
            "ComboBreaker",
            "LobbyLayout",
            "CrabCups",
            "CrabCombat",
            "AllergenAssessment",
            "JurassicJigsaw",
            "MonsterMessages",
            "OperationOrder",
            "ConwayCubes",
            "TicketTranslation",
            "RambunctiousRecitation",
            "DockingData",
            "ShuttleSearch",
            "RainRisk",
            "SeatingSystem",
            "AdapterArray",
            "EncodingError",
            "HandheldHalting",
            "HandyHaversacks",
            "CustomCustoms",
            "BinaryBoarding",
            "PassportProcessing",
            "TobogganTrajectory",
            "PasswordPhilosophy",
            "ReportRepair"
          ]'
          data-array: "[
            ${{needs.run-day-1.outputs.total_time}},
            ${{needs.run-day-2.outputs.total_time}},
            ${{needs.run-day-3.outputs.total_time}},
            ${{needs.run-day-4.outputs.total_time}},
            ${{needs.run-day-5.outputs.total_time}},
            ${{needs.run-day-6.outputs.total_time}},
            ${{needs.run-day-7.outputs.total_time}},
            ${{needs.run-day-8.outputs.total_time}},
            ${{needs.run-day-9.outputs.total_time}},
            ${{needs.run-day-10.outputs.total_time}},
            ${{needs.run-day-11.outputs.total_time}},
            ${{needs.run-day-12.outputs.total_time}},
            ${{needs.run-day-13.outputs.total_time}},
            ${{needs.run-day-14.outputs.total_time}},
            ${{needs.run-day-15.outputs.total_time}},
            ${{needs.run-day-16.outputs.total_time}},
            ${{needs.run-day-17.outputs.total_time}},
            ${{needs.run-day-18.outputs.total_time}},
            ${{needs.run-day-19.outputs.total_time}},
            ${{needs.run-day-20.outputs.total_time}},
            ${{needs.run-day-21.outputs.total_time}},
            ${{needs.run-day-22.outputs.total_time}},
            ${{needs.run-day-23.outputs.total_time}},
            ${{needs.run-day-24.outputs.total_time}},
            ${{needs.run-day-25.outputs.total_time}}
          ]"

      - name: Update README.md
        run: |
          urlRegex="\[\!\[chart\]\(.*\)\]\(.*\)"
          urlReplacement="[![chart](${{ steps.create-graph-url.outputs.chart-url }})](${{ steps.create-graph-url.outputs.chart-url }})"
          escapedUrlReplacement=$(printf '%s\n' "$urlReplacement" | sed -e 's/[\/&]/\\&/g')
          sed -i "s/$urlRegex/$escapedUrlReplacement/g" README.md

      - name: Config bot
        run: |
          git config user.email ${{ secrets.BOT_ACCOUNT_MAIL }}
          git config user.name ${{ secrets.BOT_ACCOUNT_NAME }}

      - name: Push file
        run: |
          git status
          git add README.md
          git commit -m "= Update README graph with new data"
          git push
